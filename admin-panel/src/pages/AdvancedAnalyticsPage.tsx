import React, { useState } from 'react';
import {
  Box,
  Grid,
  Card,
  CardContent,
  Typography,
  Button,
  Chip,
  Avatar,
  List,
  ListItem,
  ListItemText,
  ListItemAvatar,
  Divider,
  LinearProgress,
  Paper,
  IconButton,
  Tooltip,
  Alert,
  AlertTitle,
  TextField,
  MenuItem,
  Badge,
} from '@mui/material';
import {
  TrendingUp,
  TrendingDown,
  Psychology as AIIcon,
  Analytics as AnalyticsIcon,
  AutoGraph as GraphIcon,
  Psychology as PredictIcon,
  Lightbulb as InsightIcon,
  Warning as WarningIcon,
  CheckCircle as SuccessIcon,
  Timeline as TimelineIcon,
  Speed as SpeedIcon,
  Star as StarIcon,
  MonetizationOn,
  People,
  Schedule,
  Visibility,
  Download,
  Refresh,
  AutoFixHigh,
} from '@mui/icons-material';

const AdvancedAnalyticsPage: React.FC = () => {
  const [selectedPeriod, setSelectedPeriod] = useState('month');
  const [aiInsightsLoading, setAiInsightsLoading] = useState(false);

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ò–ò –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
  const aiInsights = [
    {
      id: 1,
      type: 'prediction',
      severity: 'high',
      title: '–ü—Ä–æ–≥–Ω–æ–∑ —Ä–æ—Å—Ç–∞ –≤—ã—Ä—É—á–∫–∏',
      description: '–ò–ò –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –≤—ã—Ä—É—á–∫–∏ –Ω–∞ 34% –≤ —Å–ª–µ–¥—É—é—â–µ–º –º–µ—Å—è—Ü–µ –±–ª–∞–≥–æ–¥–∞—Ä—è –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–º –ø—Ä–∞–∑–¥–Ω–∏–∫–∞–º',
      confidence: 89,
      impact: '+‚Ç∏280,000',
      action: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–≤–µ–ª–∏—á–∏—Ç—å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –±—é–¥–∂–µ—Ç –Ω–∞ 25%',
      icon: <PredictIcon />,
      color: '#2e7d32',
    },
    {
      id: 2,
      type: 'warning',
      severity: 'medium',
      title: '–†–∏—Å–∫ –æ—Ç—Ç–æ–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤',
      description: '–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ 23 –∫–ª–∏–µ–Ω—Ç–∞ —Å –≤—ã—Å–æ–∫–∏–º —Ä–∏—Å–∫–æ–º —É—Ö–æ–¥–∞ (–Ω–µ –±—ã–ª–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ 14+ –¥–Ω–µ–π)',
      confidence: 76,
      impact: '-‚Ç∏45,600',
      action: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é retention-–∫–∞–º–ø–∞–Ω–∏—é',
      icon: <WarningIcon />,
      color: '#ed6c02',
    },
    {
      id: 3,
      type: 'optimization',
      severity: 'high',
      title: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è',
      description: '–ò–ò –≤—ã—è–≤–∏–ª –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –¥–∏—Å–∫–æ–Ω—Ç–Ω—ã—Ö —á–∞—Å–æ–≤: –ü–Ω-–°—Ä 14:00-17:00',
      confidence: 94,
      impact: '+‚Ç∏67,200',
      action: '–í–Ω–µ–¥—Ä–∏—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
      icon: <AutoFixHigh />,
      color: '#1976d2',
    },
    {
      id: 4,
      type: 'insight',
      severity: 'low',
      title: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∏–≥—Ä—ã',
      description: 'Valorant –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–æ—Å—Ç –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ +45%. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å —Ç—É—Ä–Ω–∏—Ä',
      confidence: 82,
      impact: '+‚Ç∏89,400',
      action: '–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å Valorant Championship',
      icon: <InsightIcon />,
      color: '#9c27b0',
    },
  ];

  // –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  const performanceMetrics = [
    { label: '–°—Ä–µ–¥–Ω—è—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–ª—É–±–æ–≤', value: 73, change: +5.2, color: '#1976d2' },
    { label: '–í—Ä–µ–º—è —Å–µ—Å—Å–∏–∏ (–º–∏–Ω)', value: 127, change: +8.7, color: '#2e7d32' },
    { label: '–ö–æ–Ω–≤–µ—Ä—Å–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', value: 34, change: -2.1, color: '#ed6c02' },
    { label: 'NPS Score', value: 67, change: +12.3, color: '#9c27b0' },
    { label: 'Retention Rate (30–¥)', value: 56, change: +4.8, color: '#d32f2f' },
    { label: 'ARPU (‚Ç∏)', value: 1847, change: +15.2, color: '#795548' },
  ];

  // –ü—Ä–æ–≥–Ω–æ–∑—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –ò–ò
  const aiPredictions = [
    {
      metric: '–í—ã—Ä—É—á–∫–∞ (—Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü)',
      predicted: '‚Ç∏2,840,000',
      confidence: 91,
      change: '+18.4%',
      trend: 'up',
      factors: ['–ù–æ–≤–æ–≥–æ–¥–Ω–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏', '–ù–æ–≤—ã–π —Ç—É—Ä–Ω–∏—Ä', '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞'],
    },
    {
      metric: '–ù–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã',
      predicted: '234 —á–µ–ª–æ–≤–µ–∫–∞',
      confidence: 85,
      change: '+23.1%',
      trend: 'up',
      factors: ['–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', '–°–∞—Ä–∞—Ñ–∞–Ω–Ω–æ–µ —Ä–∞–¥–∏–æ', '–ê–∫—Ü–∏–∏'],
    },
    {
      metric: '–°—Ä–µ–¥–Ω–∏–π —á–µ–∫',
      predicted: '‚Ç∏1,950',
      confidence: 78,
      change: '+5.7%',
      trend: 'up',
      factors: ['–ü—Ä–µ–º–∏—É–º —É—Å–ª—É–≥–∏', 'Upselling', '–õ–æ—è–ª—å–Ω–æ—Å—Ç—å'],
    },
    {
      metric: '–ü–∏–∫–æ–≤–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞',
      predicted: '18:00-22:00',
      confidence: 96,
      change: '–ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π',
      trend: 'stable',
      factors: ['–†–∞–±–æ—á–∏–µ —á–∞—Å—ã', '–£—á–µ–±–Ω–æ–µ –≤—Ä–µ–º—è', '–í—ã—Ö–æ–¥–Ω—ã–µ'],
    },
  ];

  // –¢–æ–ø –∫–ª—É–±—ã –ø–æ –ò–ò —Ä–µ–π—Ç–∏–Ω–≥—É
  const aiClubRanking = [
    {
      name: 'CyberArena Almaty',
      aiScore: 94,
      revenue: '‚Ç∏980,000',
      efficiency: 91,
      prediction: '+‚Ç∏120,000',
      status: 'optimal',
      improvements: ['–ü—Ä–æ–¥–ª–∏—Ç—å —á–∞—Å—ã —Ä–∞–±–æ—Ç—ã', '–î–æ–±–∞–≤–∏—Ç—å VR –∑–æ–Ω—É'],
    },
    {
      name: 'GameZone Astana',
      aiScore: 87,
      revenue: '‚Ç∏750,000',
      efficiency: 83,
      prediction: '+‚Ç∏89,000',
      status: 'good',
      improvements: ['–û–±–Ω–æ–≤–∏—Ç—å –ü–ö', '–£–ª—É—á—à–∏—Ç—å –æ—Å–≤–µ—â–µ–Ω–∏–µ'],
    },
    {
      name: 'ProGaming Shymkent',
      aiScore: 82,
      revenue: '‚Ç∏580,000',
      efficiency: 79,
      prediction: '+‚Ç∏67,000',
      status: 'moderate',
      improvements: ['–†–∞—Å—à–∏—Ä–∏—Ç—å –º–µ–Ω—é', '–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–∏–º–∏–Ω–≥'],
    },
    {
      name: 'EsportsHub Almaty',
      aiScore: 71,
      revenue: '‚Ç∏320,000',
      efficiency: 65,
      prediction: '+‚Ç∏45,000',
      status: 'needs_attention',
      improvements: ['–†–µ–º–æ–Ω—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è', '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥'],
    },
  ];

  const getInsightColor = (type: string) => {
    switch (type) {
      case 'prediction': return '#2e7d32';
      case 'warning': return '#ed6c02';
      case 'optimization': return '#1976d2';
      case 'insight': return '#9c27b0';
      default: return '#666';
    }
  };

  const getClubStatusColor = (status: string) => {
    switch (status) {
      case 'optimal': return '#2e7d32';
      case 'good': return '#1976d2';
      case 'moderate': return '#ed6c02';
      case 'needs_attention': return '#d32f2f';
      default: return '#666';
    }
  };

  const getClubStatusText = (status: string) => {
    switch (status) {
      case 'optimal': return '–û—Ç–ª–∏—á–Ω–æ';
      case 'good': return '–•–æ—Ä–æ—à–æ';
      case 'moderate': return '–°—Ä–µ–¥–Ω–µ';
      case 'needs_attention': return '–¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è';
      default: return status;
    }
  };

  const generateAIInsights = () => {
    setAiInsightsLoading(true);
    setTimeout(() => {
      setAiInsightsLoading(false);
    }, 2000);
  };

  return (
    <Box sx={{ p: 3 }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –ò–ò */}
      <Box sx={{ mb: 4 }}>
        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>
          <Box
            sx={{
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              width: 56,
              height: 56,
              borderRadius: '50%',
              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
              color: 'white',
            }}
          >
            <AIIcon sx={{ fontSize: 32 }} />
          </Box>
          <Box>
            <Typography variant="h4" sx={{ fontWeight: 'bold', color: '#1976d2' }}>
              ü§ñ AI Analytics Dashboard
            </Typography>
            <Typography variant="subtitle1" sx={{ color: '#666' }}>
              –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –±–∏–∑–Ω–µ—Å–∞
            </Typography>
          </Box>
          <Box sx={{ ml: 'auto' }}>
            <TextField
              select
              size="small"
              label="–ü–µ—Ä–∏–æ–¥"
              value={selectedPeriod}
              onChange={(e) => setSelectedPeriod(e.target.value)}
              sx={{ minWidth: 120, mr: 2 }}
            >
              <MenuItem value="day">–î–µ–Ω—å</MenuItem>
              <MenuItem value="week">–ù–µ–¥–µ–ª—è</MenuItem>
              <MenuItem value="month">–ú–µ—Å—è—Ü</MenuItem>
              <MenuItem value="quarter">–ö–≤–∞—Ä—Ç–∞–ª</MenuItem>
              <MenuItem value="year">–ì–æ–¥</MenuItem>
            </TextField>
            <Button
              variant="contained"
              startIcon={<Refresh />}
              onClick={generateAIInsights}
              disabled={aiInsightsLoading}
              sx={{
                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                mr: 1,
              }}
            >
              {aiInsightsLoading ? '–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é...' : '–û–±–Ω–æ–≤–∏—Ç—å –ò–ò'}
            </Button>
            <Button variant="outlined" startIcon={<Download />}>
              –≠–∫—Å–ø–æ—Ä—Ç
            </Button>
          </Box>
        </Box>
      </Box>

      {/* AI Insights Cards */}
      <Grid container spacing={3} sx={{ mb: 4 }}>
        {aiInsights.map((insight) => (
          <Grid item xs={12} md={6} key={insight.id}>
            <Card sx={{ 
              borderRadius: 3,
              background: `linear-gradient(135deg, ${insight.color}15 0%, ${insight.color}25 100%)`,
              border: `2px solid ${insight.color}30`,
              position: 'relative',
              overflow: 'visible',
            }}>
              <CardContent sx={{ pb: 3 }}>
                <Box sx={{ display: 'flex', alignItems: 'flex-start', gap: 2 }}>
                  <Box
                    sx={{
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'center',
                      width: 48,
                      height: 48,
                      borderRadius: '50%',
                      backgroundColor: insight.color,
                      color: 'white',
                      mt: 1,
                    }}
                  >
                    {insight.icon}
                  </Box>
                  <Box sx={{ flexGrow: 1 }}>
                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>
                      <Typography variant="h6" sx={{ fontWeight: 'bold' }}>
                        {insight.title}
                      </Typography>
                      <Chip 
                        label={`${insight.confidence}% —Ç–æ—á–Ω–æ—Å—Ç—å`} 
                        size="small" 
                        sx={{ 
                          backgroundColor: insight.color,
                          color: 'white',
                          fontWeight: 'bold',
                        }}
                      />
                    </Box>
                    <Typography variant="body2" sx={{ mb: 2, color: '#666' }}>
                      {insight.description}
                    </Typography>
                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>
                      <Typography variant="h5" sx={{ fontWeight: 'bold', color: insight.color }}>
                        {insight.impact}
                      </Typography>
                      <LinearProgress
                        variant="determinate"
                        value={insight.confidence}
                        sx={{
                          width: 100,
                          height: 8,
                          borderRadius: 4,
                          backgroundColor: `${insight.color}20`,
                          '& .MuiLinearProgress-bar': {
                            backgroundColor: insight.color,
                          }
                        }}
                      />
                    </Box>
                    <Alert 
                      severity="info" 
                      icon={<AutoFixHigh />}
                      sx={{ 
                        backgroundColor: `${insight.color}10`,
                        border: `1px solid ${insight.color}30`,
                        '& .MuiAlert-icon': { color: insight.color },
                      }}
                    >
                      <Typography variant="caption" sx={{ fontWeight: 'bold' }}>
                        üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ò–ò: {insight.action}
                      </Typography>
                    </Alert>
                  </Box>
                </Box>
              </CardContent>
            </Card>
          </Grid>
        ))}
      </Grid>

      <Grid container spacing={3}>
        {/* –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */}
        <Grid item xs={12} lg={8}>
          <Card sx={{ borderRadius: 3, mb: 3 }}>
            <CardContent>
              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 3 }}>
                <SpeedIcon sx={{ color: '#1976d2', fontSize: 32 }} />
                <Typography variant="h6" sx={{ fontWeight: 'bold' }}>
                  üìà –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
                </Typography>
                <Chip label="–û–±–Ω–æ–≤–ª–µ–Ω–æ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏" color="success" size="small" />
              </Box>

              <Grid container spacing={3}>
                {performanceMetrics.map((metric, index) => (
                  <Grid item xs={12} sm={6} md={4} key={index}>
                    <Paper sx={{ 
                      p: 2, 
                      textAlign: 'center', 
                      borderRadius: 2,
                      background: `linear-gradient(135deg, ${metric.color}10 0%, ${metric.color}20 100%)`,
                      border: `1px solid ${metric.color}30`,
                    }}>
                      <Typography variant="caption" sx={{ color: '#666', fontWeight: 'bold' }}>
                        {metric.label}
                      </Typography>
                      <Typography variant="h4" sx={{ fontWeight: 'bold', color: metric.color, my: 1 }}>
                        {metric.value}{metric.label.includes('‚Ç∏') ? '' : metric.label.includes('%') ? '%' : ''}
                      </Typography>
                      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: 0.5 }}>
                        {metric.change > 0 ? (
                          <TrendingUp sx={{ color: '#2e7d32', fontSize: 16 }} />
                        ) : (
                          <TrendingDown sx={{ color: '#d32f2f', fontSize: 16 }} />
                        )}
                        <Typography 
                          variant="caption" 
                          sx={{ 
                            color: metric.change > 0 ? '#2e7d32' : '#d32f2f',
                            fontWeight: 'bold'
                          }}
                        >
                          {metric.change > 0 ? '+' : ''}{metric.change}%
                        </Typography>
                      </Box>
                    </Paper>
                  </Grid>
                ))}
              </Grid>
            </CardContent>
          </Card>

          {/* AI –ü—Ä–æ–≥–Ω–æ–∑—ã */}
          <Card sx={{ borderRadius: 3 }}>
            <CardContent>
              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 3 }}>
                <PredictIcon sx={{ color: '#9c27b0', fontSize: 32 }} />
                <Typography variant="h6" sx={{ fontWeight: 'bold' }}>
                  üîÆ AI –ü—Ä–æ–≥–Ω–æ–∑—ã –∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
                </Typography>
                <Chip label="–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ" color="secondary" size="small" />
              </Box>

              <Grid container spacing={2}>
                {aiPredictions.map((prediction, index) => (
                  <Grid item xs={12} sm={6} key={index}>
                    <Paper sx={{ 
                      p: 3, 
                      borderRadius: 2,
                      background: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',
                      color: 'white',
                    }}>
                      <Typography variant="subtitle2" sx={{ opacity: 0.9, mb: 1 }}>
                        {prediction.metric}
                      </Typography>
                      <Typography variant="h5" sx={{ fontWeight: 'bold', mb: 1 }}>
                        {prediction.predicted}
                      </Typography>
                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>
                        <Chip 
                          label={prediction.change}
                          size="small"
                          sx={{ 
                            backgroundColor: 'rgba(255,255,255,0.2)',
                            color: 'white',
                            fontWeight: 'bold',
                          }}
                        />
                        <Typography variant="caption">
                          {prediction.confidence}% —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å
                        </Typography>
                      </Box>
                      <Typography variant="caption" sx={{ opacity: 0.8 }}>
                        –§–∞–∫—Ç–æ—Ä—ã: {prediction.factors.join(', ')}
                      </Typography>
                    </Paper>
                  </Grid>
                ))}
              </Grid>
            </CardContent>
          </Card>
        </Grid>

        {/* AI –†–µ–π—Ç–∏–Ω–≥ –∫–ª—É–±–æ–≤ */}
        <Grid item xs={12} lg={4}>
          <Card sx={{ borderRadius: 3 }}>
            <CardContent>
              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 3 }}>
                <StarIcon sx={{ color: '#ff9800', fontSize: 32 }} />
                <Typography variant="h6" sx={{ fontWeight: 'bold' }}>
                  üèÜ AI –†–µ–π—Ç–∏–Ω–≥ –∫–ª—É–±–æ–≤
                </Typography>
              </Box>

              <List sx={{ p: 0 }}>
                {aiClubRanking.map((club, index) => (
                  <React.Fragment key={club.name}>
                    <ListItem sx={{ px: 0, py: 2 }}>
                      <ListItemAvatar>
                        <Badge
                          badgeContent={index + 1}
                          color="primary"
                          anchorOrigin={{
                            vertical: 'top',
                            horizontal: 'left',
                          }}
                        >
                          <Avatar sx={{ 
                            backgroundColor: getClubStatusColor(club.status),
                            width: 48,
                            height: 48,
                          }}>
                            {club.aiScore}
                          </Avatar>
                        </Badge>
                      </ListItemAvatar>
                      <ListItemText
                        primary={
                          <Box>
                            <Typography variant="body2" sx={{ fontWeight: 'bold' }}>
                              {club.name}
                            </Typography>
                            <Box sx={{ display: 'flex', gap: 1, mt: 0.5 }}>
                              <Chip 
                                label={`AI: ${club.aiScore}/100`} 
                                size="small" 
                                color="primary"
                              />
                              <Chip 
                                label={getClubStatusText(club.status)}
                                size="small"
                                sx={{
                                  backgroundColor: getClubStatusColor(club.status),
                                  color: 'white',
                                }}
                              />
                            </Box>
                          </Box>
                        }
                        secondary={
                          <Box sx={{ mt: 1 }}>
                            <Typography variant="caption" sx={{ display: 'block' }}>
                              üí∞ –í—ã—Ä—É—á–∫–∞: {club.revenue}
                            </Typography>
                            <Typography variant="caption" sx={{ display: 'block' }}>
                              üìä –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {club.efficiency}%
                            </Typography>
                            <Typography variant="caption" sx={{ display: 'block', color: '#2e7d32', fontWeight: 'bold' }}>
                              üìà –ü—Ä–æ–≥–Ω–æ–∑: {club.prediction}
                            </Typography>
                            <Typography variant="caption" sx={{ display: 'block', mt: 0.5 }}>
                              üí° –£–ª—É—á—à–µ–Ω–∏—è: {club.improvements.join(', ')}
                            </Typography>
                          </Box>
                        }
                      />
                    </ListItem>
                    {index < aiClubRanking.length - 1 && <Divider />}
                  </React.Fragment>
                ))}
              </List>
            </CardContent>
          </Card>
        </Grid>
      </Grid>
    </Box>
  );
};

export default AdvancedAnalyticsPage;
